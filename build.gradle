buildscript {
    repositories {
        maven {
            url "https://files.minecraftforge.net/maven"
        }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
    }
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "maven-publish"
apply plugin: "net.minecraftforge.gradle"

version = "1.6.3"
group = "com.bobmowzie.mowziesmobs"
archivesBaseName = "mowziesmobs"
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: "official", version: "1.20.1"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file("run")

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property "forge.logging.console.level", "debug"
            mods {
                mowziesmobs {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file("run-server")

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', ''
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property "forge.logging.console.level", "debug"
            mods {
                mowziesmobs {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('data')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'mowziesmobs', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

        }
    }
}

processResources {
    filesMatching("META-INF/mods.toml") {
        expand([
                'version': "${project.version}"
        ])
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "mowziesmobs",
            "Specification-Vendor": "BobMowzie",
            "Specification-Version": "1",
            "Implementation-Title": "mowziesmobs",
            "Implementation-Version": "${project.version}",
            "Implementation-Vendor" : "BobMowzie",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url "https://www.cursemaven.com" }
}

dependencies {
    minecraft "net.minecraftforge:forge:1.20.1-47.2.0"
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.20.1:4.4.2')
    implementation fg.deobf("curse.maven:worldedit-225608:4586218")
}